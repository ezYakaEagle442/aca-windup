name: Deploy WindUp

env:

  # ==== Versions ====
  
  AZ_CLI_VERSION: 2.46.0

  # ==== General settings  ====

  APP_NAME: windup
  LOCATION: westeurope
  RESOURCE_GROUP_NAME: rg-aca-windup # RG where to deploy the other Azure services: ACA, Storage, ACR, etc.
  
  AZURE_ENV_NAME: windup
  AZURE_FILE_SHARE_SERVICE_NAME: windup

  ################################## DO NOT CHANGE params below   ##################################

on:
  workflow_dispatch:
  push:
    branches:
      - main

# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/azure-dev-cli-apps:latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
          Write-Host "::add-mask::$($info.clientSecret)"

          azd login `
            --client-id "$($info.clientId)" `
            --client-secret "$($info.clientSecret)" `
            --tenant-id "$($info.tenantId)"
        shell: pwsh
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Display environment variables
        run: |

          echo "Checking GITHUB_ENV"
          echo "APP_NAME="$APP_NAME
          echo "RESOURCE_GROUP_NAME=$RESOURCE_GROUP_NAME"
          echo "AZURE_ENV_NAME="$AZURE_ENV_NAME
          echo "AZURE_FILE_SHARE_SERVICE_NAME="$AZURE_FILE_SHARE_SERVICE_NAME

          export APP_NAME=${{ env.APP_NAME }}
          export RESOURCE_GROUP_NAME=${{ env.RESOURCE_GROUP_NAME }}
          export AZURE_ENV_NAME=${{ env.AZURE_ENV_NAME }}
          export AZURE_FILE_SHARE_SERVICE_NAME=${{ env.AZURE_FILE_SHARE_SERVICE_NAME }}

        shell: bash

      - name: Azure Dev Provision
        run: azd provision --no-prompt
        env:
          AZURE_ENV_NAME: ${{ env.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ env.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure Dev Deploy
        run: azd deploy --no-prompt
        env:
          AZURE_ENV_NAME: ${{ env.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ env.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Display Bicep outputs
        run: |
          
          storage_name=$(az deployment group show --name storage -g ${{ env.RESOURCE_GROUP_NAME }} --query properties.outputs.azurestorageName.value -o tsv)
          echo "storage_name=" $storage_name
          echo "AZ_STORAGE_NAME="$storage_name >> $GITHUB_ENV

          azureFileServiceName=$(az deployment group show --name storage -g ${{ env.RESOURCE_GROUP_NAME }} --query properties.outputs.azureFileServiceName.value -o tsv)
          echo "azureFileServiceName=" $azureFileServiceName
          echo "AZ_STORAGE_FILE_SVC_NAME="$azureFileServiceName >> $GITHUB_ENV

          azureFileShareServiceName=$(az deployment group show --name storage -g ${{ env.RESOURCE_GROUP_NAME }} --query properties.outputs.azureFileShareServiceName.value -o tsv)
          echo "azureFileShareServiceName=" $azureFileShareServiceName
          echo "AZ_STORAGE_FILE_SHARE_NAME="$azureFileShareServiceName >> $GITHUB_ENV

          ACA_ENV_NAME=$(az deployment group show --name containerApps -g ${{ env.RESOURCE_GROUP_NAME }} --query properties.outputs.containerAppsEnvironmentName.value -o tsv)
          echo "ACA_ENV_NAME="$ACA_ENV_NAME
          echo "ACA_ENV_NAME="$ACA_ENV_NAME >> $GITHUB_ENV

          AZURE_CONTAINER_REGISTRY_ENDPOINT=$(az deployment group show --name containerApps -g ${{ env.RESOURCE_GROUP_NAME }} --query properties.outputs.registryLoginServer.value -o tsv)
          echo "AZURE_CONTAINER_REGISTRY_ENDPOINT="$AZURE_CONTAINER_REGISTRY_ENDPOINT
          echo "AZURE_CONTAINER_REGISTRY_ENDPOINT="$AZURE_CONTAINER_REGISTRY_ENDPOINT >> $GITHUB_ENV

          AZURE_CONTAINER_REGISTRY_NAME=$(az deployment group show --name containerApps -g ${{ env.RESOURCE_GROUP_NAME }} --query properties.outputs.registryName.value -o tsv)
          echo "AZURE_CONTAINER_REGISTRY_NAME="$AZURE_CONTAINER_REGISTRY_NAME
          echo "AZURE_CONTAINER_REGISTRY_NAME="$AZURE_CONTAINER_REGISTRY_NAME >> $GITHUB_ENV

        shell: bash